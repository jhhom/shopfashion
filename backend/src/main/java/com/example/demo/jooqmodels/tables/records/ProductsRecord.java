/*
 * This file is generated by jOOQ.
 */
package com.example.demo.jooqmodels.tables.records;


import com.example.demo.jooqmodels.enums.ProductStatus;
import com.example.demo.jooqmodels.enums.ProductType;
import com.example.demo.jooqmodels.tables.Products;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ProductsRecord extends UpdatableRecordImpl<ProductsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.products.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.products.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.products.pricing</code>.
     */
    public void setPricing(BigDecimal value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.products.pricing</code>.
     */
    public BigDecimal getPricing() {
        return (BigDecimal) get(1);
    }

    /**
     * Setter for <code>public.products.product_name</code>.
     */
    public void setProductName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.products.product_name</code>.
     */
    public String getProductName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.products.product_description</code>.
     */
    public void setProductDescription(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.products.product_description</code>.
     */
    public String getProductDescription() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.products.product_type</code>.
     */
    public void setProductType(ProductType value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.products.product_type</code>.
     */
    public ProductType getProductType() {
        return (ProductType) get(4);
    }

    /**
     * Setter for <code>public.products.taxon_id</code>.
     */
    public void setTaxonId(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.products.taxon_id</code>.
     */
    public Integer getTaxonId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.products.product_status</code>.
     */
    public void setProductStatus(ProductStatus value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.products.product_status</code>.
     */
    public ProductStatus getProductStatus() {
        return (ProductStatus) get(6);
    }

    /**
     * Setter for <code>public.products.product_image_url</code>.
     */
    public void setProductImageUrl(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.products.product_image_url</code>.
     */
    public String getProductImageUrl() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.products.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.products.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>public.products.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.products.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProductsRecord
     */
    public ProductsRecord() {
        super(Products.PRODUCTS);
    }

    /**
     * Create a detached, initialised ProductsRecord
     */
    public ProductsRecord(Integer id, BigDecimal pricing, String productName, String productDescription, ProductType productType, Integer taxonId, ProductStatus productStatus, String productImageUrl, LocalDateTime updatedAt, LocalDateTime createdAt) {
        super(Products.PRODUCTS);

        setId(id);
        setPricing(pricing);
        setProductName(productName);
        setProductDescription(productDescription);
        setProductType(productType);
        setTaxonId(taxonId);
        setProductStatus(productStatus);
        setProductImageUrl(productImageUrl);
        setUpdatedAt(updatedAt);
        setCreatedAt(createdAt);
        resetChangedOnNotNull();
    }
}
