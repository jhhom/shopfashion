/*
 * This file is generated by jOOQ.
 */
package com.example.demo.jooqmodels;


import com.example.demo.jooqmodels.tables.Admins;
import com.example.demo.jooqmodels.tables.CustomerCartConfigurableItems;
import com.example.demo.jooqmodels.tables.CustomerCartSimpleItems;
import com.example.demo.jooqmodels.tables.Customers;
import com.example.demo.jooqmodels.tables.KnexMigrations;
import com.example.demo.jooqmodels.tables.KnexMigrationsLock;
import com.example.demo.jooqmodels.tables.OrderLineConfigurableItems;
import com.example.demo.jooqmodels.tables.OrderLineSimpleItems;
import com.example.demo.jooqmodels.tables.Orders;
import com.example.demo.jooqmodels.tables.ProductAssociationTypes;
import com.example.demo.jooqmodels.tables.ProductAssociations;
import com.example.demo.jooqmodels.tables.ProductConfigurableOptions;
import com.example.demo.jooqmodels.tables.ProductOptionValues;
import com.example.demo.jooqmodels.tables.ProductOptions;
import com.example.demo.jooqmodels.tables.ProductReviews;
import com.example.demo.jooqmodels.tables.ProductTaxons;
import com.example.demo.jooqmodels.tables.ProductVariantOptions;
import com.example.demo.jooqmodels.tables.ProductVariants;
import com.example.demo.jooqmodels.tables.Products;
import com.example.demo.jooqmodels.tables.Taxons;
import com.example.demo.jooqmodels.tables.records.AdminsRecord;
import com.example.demo.jooqmodels.tables.records.CustomerCartConfigurableItemsRecord;
import com.example.demo.jooqmodels.tables.records.CustomerCartSimpleItemsRecord;
import com.example.demo.jooqmodels.tables.records.CustomersRecord;
import com.example.demo.jooqmodels.tables.records.KnexMigrationsLockRecord;
import com.example.demo.jooqmodels.tables.records.KnexMigrationsRecord;
import com.example.demo.jooqmodels.tables.records.OrderLineConfigurableItemsRecord;
import com.example.demo.jooqmodels.tables.records.OrderLineSimpleItemsRecord;
import com.example.demo.jooqmodels.tables.records.OrdersRecord;
import com.example.demo.jooqmodels.tables.records.ProductAssociationTypesRecord;
import com.example.demo.jooqmodels.tables.records.ProductAssociationsRecord;
import com.example.demo.jooqmodels.tables.records.ProductConfigurableOptionsRecord;
import com.example.demo.jooqmodels.tables.records.ProductOptionValuesRecord;
import com.example.demo.jooqmodels.tables.records.ProductOptionsRecord;
import com.example.demo.jooqmodels.tables.records.ProductReviewsRecord;
import com.example.demo.jooqmodels.tables.records.ProductTaxonsRecord;
import com.example.demo.jooqmodels.tables.records.ProductVariantOptionsRecord;
import com.example.demo.jooqmodels.tables.records.ProductVariantsRecord;
import com.example.demo.jooqmodels.tables.records.ProductsRecord;
import com.example.demo.jooqmodels.tables.records.TaxonsRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AdminsRecord> ADMINS_EMAIL_KEY = Internal.createUniqueKey(Admins.ADMINS, DSL.name("admins_email_key"), new TableField[] { Admins.ADMINS.EMAIL }, true);
    public static final UniqueKey<AdminsRecord> ADMINS_PKEY = Internal.createUniqueKey(Admins.ADMINS, DSL.name("admins_pkey"), new TableField[] { Admins.ADMINS.ID }, true);
    public static final UniqueKey<AdminsRecord> ADMINS_USERNAME_KEY = Internal.createUniqueKey(Admins.ADMINS, DSL.name("admins_username_key"), new TableField[] { Admins.ADMINS.USERNAME }, true);
    public static final UniqueKey<CustomerCartConfigurableItemsRecord> CUSTOMER_CART_CONFIGURABLE_ITEMS_PKEY = Internal.createUniqueKey(CustomerCartConfigurableItems.CUSTOMER_CART_CONFIGURABLE_ITEMS, DSL.name("customer_cart_configurable_items_pkey"), new TableField[] { CustomerCartConfigurableItems.CUSTOMER_CART_CONFIGURABLE_ITEMS.CUSTOMER_ID, CustomerCartConfigurableItems.CUSTOMER_CART_CONFIGURABLE_ITEMS.PRODUCT_VARIANT_ID }, true);
    public static final UniqueKey<CustomerCartSimpleItemsRecord> CUSTOMER_CART_SIMPLE_ITEMS_PKEY = Internal.createUniqueKey(CustomerCartSimpleItems.CUSTOMER_CART_SIMPLE_ITEMS, DSL.name("customer_cart_simple_items_pkey"), new TableField[] { CustomerCartSimpleItems.CUSTOMER_CART_SIMPLE_ITEMS.CUSTOMER_ID, CustomerCartSimpleItems.CUSTOMER_CART_SIMPLE_ITEMS.PRODUCT_ID }, true);
    public static final UniqueKey<CustomersRecord> CUSTOMERS_EMAIL_KEY = Internal.createUniqueKey(Customers.CUSTOMERS, DSL.name("customers_email_key"), new TableField[] { Customers.CUSTOMERS.EMAIL }, true);
    public static final UniqueKey<CustomersRecord> CUSTOMERS_PKEY = Internal.createUniqueKey(Customers.CUSTOMERS, DSL.name("customers_pkey"), new TableField[] { Customers.CUSTOMERS.ID }, true);
    public static final UniqueKey<KnexMigrationsRecord> KNEX_MIGRATIONS_PKEY = Internal.createUniqueKey(KnexMigrations.KNEX_MIGRATIONS, DSL.name("knex_migrations_pkey"), new TableField[] { KnexMigrations.KNEX_MIGRATIONS.ID }, true);
    public static final UniqueKey<KnexMigrationsLockRecord> KNEX_MIGRATIONS_LOCK_PKEY = Internal.createUniqueKey(KnexMigrationsLock.KNEX_MIGRATIONS_LOCK, DSL.name("knex_migrations_lock_pkey"), new TableField[] { KnexMigrationsLock.KNEX_MIGRATIONS_LOCK.INDEX }, true);
    public static final UniqueKey<OrdersRecord> ORDERS_PKEY = Internal.createUniqueKey(Orders.ORDERS, DSL.name("orders_pkey"), new TableField[] { Orders.ORDERS.ID }, true);
    public static final UniqueKey<ProductAssociationTypesRecord> PRODUCT_ASSOCIATION_TYPES_PKEY = Internal.createUniqueKey(ProductAssociationTypes.PRODUCT_ASSOCIATION_TYPES, DSL.name("product_association_types_pkey"), new TableField[] { ProductAssociationTypes.PRODUCT_ASSOCIATION_TYPES.ID }, true);
    public static final UniqueKey<ProductAssociationsRecord> PRODUCT_ASSOCIATIONS_PKEY = Internal.createUniqueKey(ProductAssociations.PRODUCT_ASSOCIATIONS, DSL.name("product_associations_pkey"), new TableField[] { ProductAssociations.PRODUCT_ASSOCIATIONS.PRODUCT_ASSOCIATION_TYPE_ID, ProductAssociations.PRODUCT_ASSOCIATIONS.PRODUCT_ID }, true);
    public static final UniqueKey<ProductConfigurableOptionsRecord> PRODUCT_CONFIGURABLE_OPTIONS_PKEY = Internal.createUniqueKey(ProductConfigurableOptions.PRODUCT_CONFIGURABLE_OPTIONS, DSL.name("product_configurable_options_pkey"), new TableField[] { ProductConfigurableOptions.PRODUCT_CONFIGURABLE_OPTIONS.ID }, true);
    public static final UniqueKey<ProductConfigurableOptionsRecord> PRODUCT_CONFIGURABLE_OPTIONS_PRODUCT_ID_PRODUCT_OPTION_CODE_KEY = Internal.createUniqueKey(ProductConfigurableOptions.PRODUCT_CONFIGURABLE_OPTIONS, DSL.name("product_configurable_options_product_id_product_option_code_key"), new TableField[] { ProductConfigurableOptions.PRODUCT_CONFIGURABLE_OPTIONS.PRODUCT_ID, ProductConfigurableOptions.PRODUCT_CONFIGURABLE_OPTIONS.PRODUCT_OPTION_CODE }, true);
    public static final UniqueKey<ProductOptionValuesRecord> PRODUCT_OPTION_VALUES_OPTION_CODE_OPTION_VALUE_KEY = Internal.createUniqueKey(ProductOptionValues.PRODUCT_OPTION_VALUES, DSL.name("product_option_values_option_code_option_value_key"), new TableField[] { ProductOptionValues.PRODUCT_OPTION_VALUES.OPTION_CODE, ProductOptionValues.PRODUCT_OPTION_VALUES.OPTION_VALUE }, true);
    public static final UniqueKey<ProductOptionValuesRecord> PRODUCT_OPTION_VALUES_PKEY = Internal.createUniqueKey(ProductOptionValues.PRODUCT_OPTION_VALUES, DSL.name("product_option_values_pkey"), new TableField[] { ProductOptionValues.PRODUCT_OPTION_VALUES.ID }, true);
    public static final UniqueKey<ProductOptionsRecord> PRODUCT_OPTIONS_PKEY = Internal.createUniqueKey(ProductOptions.PRODUCT_OPTIONS, DSL.name("product_options_pkey"), new TableField[] { ProductOptions.PRODUCT_OPTIONS.CODE }, true);
    public static final UniqueKey<ProductOptionsRecord> PRODUCT_OPTIONS_POSITION_KEY = Internal.createUniqueKey(ProductOptions.PRODUCT_OPTIONS, DSL.name("product_options_position_key"), new TableField[] { ProductOptions.PRODUCT_OPTIONS.POSITION }, true);
    public static final UniqueKey<ProductReviewsRecord> PRODUCT_REVIEWS_PKEY = Internal.createUniqueKey(ProductReviews.PRODUCT_REVIEWS, DSL.name("product_reviews_pkey"), new TableField[] { ProductReviews.PRODUCT_REVIEWS.ORDER_ID, ProductReviews.PRODUCT_REVIEWS.PRODUCT_ID }, true);
    public static final UniqueKey<ProductTaxonsRecord> PRODUCT_TAXONS_PKEY = Internal.createUniqueKey(ProductTaxons.PRODUCT_TAXONS, DSL.name("product_taxons_pkey"), new TableField[] { ProductTaxons.PRODUCT_TAXONS.ID }, true);
    public static final UniqueKey<ProductTaxonsRecord> PRODUCT_TAXONS_PRODUCT_ID_TAXON_ID_KEY = Internal.createUniqueKey(ProductTaxons.PRODUCT_TAXONS, DSL.name("product_taxons_product_id_taxon_id_key"), new TableField[] { ProductTaxons.PRODUCT_TAXONS.PRODUCT_ID, ProductTaxons.PRODUCT_TAXONS.TAXON_ID }, true);
    public static final UniqueKey<ProductVariantOptionsRecord> PRODUCT_VARIANT_OPTIONS_PKEY = Internal.createUniqueKey(ProductVariantOptions.PRODUCT_VARIANT_OPTIONS, DSL.name("product_variant_options_pkey"), new TableField[] { ProductVariantOptions.PRODUCT_VARIANT_OPTIONS.ID }, true);
    public static final UniqueKey<ProductVariantOptionsRecord> PRODUCT_VARIANT_OPTIONS_PRODUCT_VARIANT_ID_PRODUCT_OPTION_V_KEY = Internal.createUniqueKey(ProductVariantOptions.PRODUCT_VARIANT_OPTIONS, DSL.name("product_variant_options_product_variant_id_product_option_v_key"), new TableField[] { ProductVariantOptions.PRODUCT_VARIANT_OPTIONS.PRODUCT_VARIANT_ID, ProductVariantOptions.PRODUCT_VARIANT_OPTIONS.PRODUCT_OPTION_VALUE_ID }, true);
    public static final UniqueKey<ProductVariantsRecord> PRODUCT_VARIANTS_PKEY = Internal.createUniqueKey(ProductVariants.PRODUCT_VARIANTS, DSL.name("product_variants_pkey"), new TableField[] { ProductVariants.PRODUCT_VARIANTS.ID }, true);
    public static final UniqueKey<ProductVariantsRecord> PRODUCT_VARIANTS_PRODUCT_ID_POSITION_KEY = Internal.createUniqueKey(ProductVariants.PRODUCT_VARIANTS, DSL.name("product_variants_product_id_position_key"), new TableField[] { ProductVariants.PRODUCT_VARIANTS.PRODUCT_ID, ProductVariants.PRODUCT_VARIANTS.POSITION }, true);
    public static final UniqueKey<ProductVariantsRecord> PRODUCT_VARIANTS_PRODUCT_ID_VARIANT_NAME_KEY = Internal.createUniqueKey(ProductVariants.PRODUCT_VARIANTS, DSL.name("product_variants_product_id_variant_name_key"), new TableField[] { ProductVariants.PRODUCT_VARIANTS.PRODUCT_ID, ProductVariants.PRODUCT_VARIANTS.VARIANT_NAME }, true);
    public static final UniqueKey<ProductsRecord> PRODUCTS_PKEY = Internal.createUniqueKey(Products.PRODUCTS, DSL.name("products_pkey"), new TableField[] { Products.PRODUCTS.ID }, true);
    public static final UniqueKey<TaxonsRecord> TAXONS_PARENT_ID_SLUG_KEY = Internal.createUniqueKey(Taxons.TAXONS, DSL.name("taxons_parent_id_slug_key"), new TableField[] { Taxons.TAXONS.PARENT_ID, Taxons.TAXONS.SLUG }, true);
    public static final UniqueKey<TaxonsRecord> TAXONS_PARENT_ID_TAXON_NAME_KEY = Internal.createUniqueKey(Taxons.TAXONS, DSL.name("taxons_parent_id_taxon_name_key"), new TableField[] { Taxons.TAXONS.PARENT_ID, Taxons.TAXONS.TAXON_NAME }, true);
    public static final UniqueKey<TaxonsRecord> TAXONS_PKEY = Internal.createUniqueKey(Taxons.TAXONS, DSL.name("taxons_pkey"), new TableField[] { Taxons.TAXONS.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<CustomerCartConfigurableItemsRecord, CustomersRecord> CUSTOMER_CART_CONFIGURABLE_ITEMS__CUSTOMER_CART_CONFIGURABLE_ITEMS_CUSTOMER_ID_FKEY = Internal.createForeignKey(CustomerCartConfigurableItems.CUSTOMER_CART_CONFIGURABLE_ITEMS, DSL.name("customer_cart_configurable_items_customer_id_fkey"), new TableField[] { CustomerCartConfigurableItems.CUSTOMER_CART_CONFIGURABLE_ITEMS.CUSTOMER_ID }, Keys.CUSTOMERS_PKEY, new TableField[] { Customers.CUSTOMERS.ID }, true);
    public static final ForeignKey<CustomerCartConfigurableItemsRecord, ProductVariantsRecord> CUSTOMER_CART_CONFIGURABLE_ITEMS__CUSTOMER_CART_CONFIGURABLE_ITEMS_PRODUCT_VARIANT_ID_FKEY = Internal.createForeignKey(CustomerCartConfigurableItems.CUSTOMER_CART_CONFIGURABLE_ITEMS, DSL.name("customer_cart_configurable_items_product_variant_id_fkey"), new TableField[] { CustomerCartConfigurableItems.CUSTOMER_CART_CONFIGURABLE_ITEMS.PRODUCT_VARIANT_ID }, Keys.PRODUCT_VARIANTS_PKEY, new TableField[] { ProductVariants.PRODUCT_VARIANTS.ID }, true);
    public static final ForeignKey<CustomerCartSimpleItemsRecord, CustomersRecord> CUSTOMER_CART_SIMPLE_ITEMS__CUSTOMER_CART_SIMPLE_ITEMS_CUSTOMER_ID_FKEY = Internal.createForeignKey(CustomerCartSimpleItems.CUSTOMER_CART_SIMPLE_ITEMS, DSL.name("customer_cart_simple_items_customer_id_fkey"), new TableField[] { CustomerCartSimpleItems.CUSTOMER_CART_SIMPLE_ITEMS.CUSTOMER_ID }, Keys.CUSTOMERS_PKEY, new TableField[] { Customers.CUSTOMERS.ID }, true);
    public static final ForeignKey<CustomerCartSimpleItemsRecord, ProductsRecord> CUSTOMER_CART_SIMPLE_ITEMS__CUSTOMER_CART_SIMPLE_ITEMS_PRODUCT_ID_FKEY = Internal.createForeignKey(CustomerCartSimpleItems.CUSTOMER_CART_SIMPLE_ITEMS, DSL.name("customer_cart_simple_items_product_id_fkey"), new TableField[] { CustomerCartSimpleItems.CUSTOMER_CART_SIMPLE_ITEMS.PRODUCT_ID }, Keys.PRODUCTS_PKEY, new TableField[] { Products.PRODUCTS.ID }, true);
    public static final ForeignKey<OrderLineConfigurableItemsRecord, OrdersRecord> ORDER_LINE_CONFIGURABLE_ITEMS__ORDER_LINE_CONFIGURABLE_ITEMS_ORDER_ID_FKEY = Internal.createForeignKey(OrderLineConfigurableItems.ORDER_LINE_CONFIGURABLE_ITEMS, DSL.name("order_line_configurable_items_order_id_fkey"), new TableField[] { OrderLineConfigurableItems.ORDER_LINE_CONFIGURABLE_ITEMS.ORDER_ID }, Keys.ORDERS_PKEY, new TableField[] { Orders.ORDERS.ID }, true);
    public static final ForeignKey<OrderLineConfigurableItemsRecord, ProductVariantsRecord> ORDER_LINE_CONFIGURABLE_ITEMS__ORDER_LINE_CONFIGURABLE_ITEMS_PRODUCT_VARIANT_ID_FKEY = Internal.createForeignKey(OrderLineConfigurableItems.ORDER_LINE_CONFIGURABLE_ITEMS, DSL.name("order_line_configurable_items_product_variant_id_fkey"), new TableField[] { OrderLineConfigurableItems.ORDER_LINE_CONFIGURABLE_ITEMS.PRODUCT_VARIANT_ID }, Keys.PRODUCT_VARIANTS_PKEY, new TableField[] { ProductVariants.PRODUCT_VARIANTS.ID }, true);
    public static final ForeignKey<OrderLineSimpleItemsRecord, OrdersRecord> ORDER_LINE_SIMPLE_ITEMS__ORDER_LINE_SIMPLE_ITEMS_ORDER_ID_FKEY = Internal.createForeignKey(OrderLineSimpleItems.ORDER_LINE_SIMPLE_ITEMS, DSL.name("order_line_simple_items_order_id_fkey"), new TableField[] { OrderLineSimpleItems.ORDER_LINE_SIMPLE_ITEMS.ORDER_ID }, Keys.ORDERS_PKEY, new TableField[] { Orders.ORDERS.ID }, true);
    public static final ForeignKey<OrderLineSimpleItemsRecord, ProductsRecord> ORDER_LINE_SIMPLE_ITEMS__ORDER_LINE_SIMPLE_ITEMS_PRODUCT_ID_FKEY = Internal.createForeignKey(OrderLineSimpleItems.ORDER_LINE_SIMPLE_ITEMS, DSL.name("order_line_simple_items_product_id_fkey"), new TableField[] { OrderLineSimpleItems.ORDER_LINE_SIMPLE_ITEMS.PRODUCT_ID }, Keys.PRODUCTS_PKEY, new TableField[] { Products.PRODUCTS.ID }, true);
    public static final ForeignKey<OrdersRecord, CustomersRecord> ORDERS__ORDERS_CUSTOMER_ID_FKEY = Internal.createForeignKey(Orders.ORDERS, DSL.name("orders_customer_id_fkey"), new TableField[] { Orders.ORDERS.CUSTOMER_ID }, Keys.CUSTOMERS_PKEY, new TableField[] { Customers.CUSTOMERS.ID }, true);
    public static final ForeignKey<ProductAssociationsRecord, ProductAssociationTypesRecord> PRODUCT_ASSOCIATIONS__PRODUCT_ASSOCIATIONS_PRODUCT_ASSOCIATION_TYPE_ID_FKEY = Internal.createForeignKey(ProductAssociations.PRODUCT_ASSOCIATIONS, DSL.name("product_associations_product_association_type_id_fkey"), new TableField[] { ProductAssociations.PRODUCT_ASSOCIATIONS.PRODUCT_ASSOCIATION_TYPE_ID }, Keys.PRODUCT_ASSOCIATION_TYPES_PKEY, new TableField[] { ProductAssociationTypes.PRODUCT_ASSOCIATION_TYPES.ID }, true);
    public static final ForeignKey<ProductAssociationsRecord, ProductsRecord> PRODUCT_ASSOCIATIONS__PRODUCT_ASSOCIATIONS_PRODUCT_ID_FKEY = Internal.createForeignKey(ProductAssociations.PRODUCT_ASSOCIATIONS, DSL.name("product_associations_product_id_fkey"), new TableField[] { ProductAssociations.PRODUCT_ASSOCIATIONS.PRODUCT_ID }, Keys.PRODUCTS_PKEY, new TableField[] { Products.PRODUCTS.ID }, true);
    public static final ForeignKey<ProductConfigurableOptionsRecord, ProductsRecord> PRODUCT_CONFIGURABLE_OPTIONS__PRODUCT_CONFIGURABLE_OPTIONS_PRODUCT_ID_FKEY = Internal.createForeignKey(ProductConfigurableOptions.PRODUCT_CONFIGURABLE_OPTIONS, DSL.name("product_configurable_options_product_id_fkey"), new TableField[] { ProductConfigurableOptions.PRODUCT_CONFIGURABLE_OPTIONS.PRODUCT_ID }, Keys.PRODUCTS_PKEY, new TableField[] { Products.PRODUCTS.ID }, true);
    public static final ForeignKey<ProductConfigurableOptionsRecord, ProductOptionsRecord> PRODUCT_CONFIGURABLE_OPTIONS__PRODUCT_CONFIGURABLE_OPTIONS_PRODUCT_OPTION_CODE_FKEY = Internal.createForeignKey(ProductConfigurableOptions.PRODUCT_CONFIGURABLE_OPTIONS, DSL.name("product_configurable_options_product_option_code_fkey"), new TableField[] { ProductConfigurableOptions.PRODUCT_CONFIGURABLE_OPTIONS.PRODUCT_OPTION_CODE }, Keys.PRODUCT_OPTIONS_PKEY, new TableField[] { ProductOptions.PRODUCT_OPTIONS.CODE }, true);
    public static final ForeignKey<ProductOptionValuesRecord, ProductOptionsRecord> PRODUCT_OPTION_VALUES__PRODUCT_OPTION_VALUES_OPTION_CODE_FKEY = Internal.createForeignKey(ProductOptionValues.PRODUCT_OPTION_VALUES, DSL.name("product_option_values_option_code_fkey"), new TableField[] { ProductOptionValues.PRODUCT_OPTION_VALUES.OPTION_CODE }, Keys.PRODUCT_OPTIONS_PKEY, new TableField[] { ProductOptions.PRODUCT_OPTIONS.CODE }, true);
    public static final ForeignKey<ProductReviewsRecord, OrdersRecord> PRODUCT_REVIEWS__PRODUCT_REVIEWS_ORDER_ID_FKEY = Internal.createForeignKey(ProductReviews.PRODUCT_REVIEWS, DSL.name("product_reviews_order_id_fkey"), new TableField[] { ProductReviews.PRODUCT_REVIEWS.ORDER_ID }, Keys.ORDERS_PKEY, new TableField[] { Orders.ORDERS.ID }, true);
    public static final ForeignKey<ProductReviewsRecord, ProductsRecord> PRODUCT_REVIEWS__PRODUCT_REVIEWS_PRODUCT_ID_FKEY = Internal.createForeignKey(ProductReviews.PRODUCT_REVIEWS, DSL.name("product_reviews_product_id_fkey"), new TableField[] { ProductReviews.PRODUCT_REVIEWS.PRODUCT_ID }, Keys.PRODUCTS_PKEY, new TableField[] { Products.PRODUCTS.ID }, true);
    public static final ForeignKey<ProductTaxonsRecord, ProductsRecord> PRODUCT_TAXONS__PRODUCT_TAXONS_PRODUCT_ID_FKEY = Internal.createForeignKey(ProductTaxons.PRODUCT_TAXONS, DSL.name("product_taxons_product_id_fkey"), new TableField[] { ProductTaxons.PRODUCT_TAXONS.PRODUCT_ID }, Keys.PRODUCTS_PKEY, new TableField[] { Products.PRODUCTS.ID }, true);
    public static final ForeignKey<ProductTaxonsRecord, TaxonsRecord> PRODUCT_TAXONS__PRODUCT_TAXONS_TAXON_ID_FKEY = Internal.createForeignKey(ProductTaxons.PRODUCT_TAXONS, DSL.name("product_taxons_taxon_id_fkey"), new TableField[] { ProductTaxons.PRODUCT_TAXONS.TAXON_ID }, Keys.TAXONS_PKEY, new TableField[] { Taxons.TAXONS.ID }, true);
    public static final ForeignKey<ProductVariantOptionsRecord, ProductOptionValuesRecord> PRODUCT_VARIANT_OPTIONS__PRODUCT_VARIANT_OPTIONS_PRODUCT_OPTION_VALUE_ID_FKEY = Internal.createForeignKey(ProductVariantOptions.PRODUCT_VARIANT_OPTIONS, DSL.name("product_variant_options_product_option_value_id_fkey"), new TableField[] { ProductVariantOptions.PRODUCT_VARIANT_OPTIONS.PRODUCT_OPTION_VALUE_ID }, Keys.PRODUCT_OPTION_VALUES_PKEY, new TableField[] { ProductOptionValues.PRODUCT_OPTION_VALUES.ID }, true);
    public static final ForeignKey<ProductVariantOptionsRecord, ProductVariantsRecord> PRODUCT_VARIANT_OPTIONS__PRODUCT_VARIANT_OPTIONS_PRODUCT_VARIANT_ID_FKEY = Internal.createForeignKey(ProductVariantOptions.PRODUCT_VARIANT_OPTIONS, DSL.name("product_variant_options_product_variant_id_fkey"), new TableField[] { ProductVariantOptions.PRODUCT_VARIANT_OPTIONS.PRODUCT_VARIANT_ID }, Keys.PRODUCT_VARIANTS_PKEY, new TableField[] { ProductVariants.PRODUCT_VARIANTS.ID }, true);
    public static final ForeignKey<ProductVariantsRecord, ProductsRecord> PRODUCT_VARIANTS__PRODUCT_VARIANTS_PRODUCT_ID_FKEY = Internal.createForeignKey(ProductVariants.PRODUCT_VARIANTS, DSL.name("product_variants_product_id_fkey"), new TableField[] { ProductVariants.PRODUCT_VARIANTS.PRODUCT_ID }, Keys.PRODUCTS_PKEY, new TableField[] { Products.PRODUCTS.ID }, true);
    public static final ForeignKey<ProductsRecord, TaxonsRecord> PRODUCTS__PRODUCTS_TAXON_ID_FKEY = Internal.createForeignKey(Products.PRODUCTS, DSL.name("products_taxon_id_fkey"), new TableField[] { Products.PRODUCTS.TAXON_ID }, Keys.TAXONS_PKEY, new TableField[] { Taxons.TAXONS.ID }, true);
    public static final ForeignKey<TaxonsRecord, TaxonsRecord> TAXONS__TAXONS_PARENT_ID_FKEY = Internal.createForeignKey(Taxons.TAXONS, DSL.name("taxons_parent_id_fkey"), new TableField[] { Taxons.TAXONS.PARENT_ID }, Keys.TAXONS_PKEY, new TableField[] { Taxons.TAXONS.ID }, true);
}
