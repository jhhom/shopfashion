-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.admins
(
    id integer NOT NULL DEFAULT nextval('admins_id_seq'::regclass),
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    username character varying(255) COLLATE pg_catalog."default" NOT NULL,
    updated_at timestamp without time zone NOT NULL DEFAULT now(),
    created_at timestamp without time zone NOT NULL DEFAULT now(),
    CONSTRAINT admins_pkey PRIMARY KEY (id),
    CONSTRAINT admins_email_key UNIQUE (email),
    CONSTRAINT admins_username_key UNIQUE (username)
);

CREATE TABLE IF NOT EXISTS public.customer_cart_configurable_items
(
    customer_id integer NOT NULL,
    product_variant_id integer NOT NULL,
    quantity integer NOT NULL DEFAULT 0,
    added_at timestamp without time zone NOT NULL,
    CONSTRAINT customer_cart_configurable_items_pkey PRIMARY KEY (customer_id, product_variant_id)
);

CREATE TABLE IF NOT EXISTS public.customer_cart_simple_items
(
    customer_id integer NOT NULL,
    product_id integer NOT NULL,
    quantity integer NOT NULL DEFAULT 0,
    added_at timestamp without time zone NOT NULL,
    CONSTRAINT customer_cart_simple_items_pkey PRIMARY KEY (customer_id, product_id)
);

CREATE TABLE IF NOT EXISTS public.customers
(
    id integer NOT NULL DEFAULT nextval('customers_id_seq'::regclass),
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    updated_at timestamp without time zone NOT NULL DEFAULT now(),
    created_at timestamp without time zone NOT NULL DEFAULT now(),
    CONSTRAINT customers_pkey PRIMARY KEY (id),
    CONSTRAINT customers_email_key UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS public.knex_migrations
(
    id integer NOT NULL DEFAULT nextval('knex_migrations_id_seq'::regclass),
    name character varying(255) COLLATE pg_catalog."default",
    batch integer,
    migration_time timestamp with time zone,
    CONSTRAINT knex_migrations_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.knex_migrations_lock
(
    index integer NOT NULL DEFAULT nextval('knex_migrations_lock_index_seq'::regclass),
    is_locked integer,
    CONSTRAINT knex_migrations_lock_pkey PRIMARY KEY (index)
);

CREATE TABLE IF NOT EXISTS public.order_line_configurable_items
(
    order_id integer NOT NULL,
    product_variant_id integer NOT NULL,
    quantity integer NOT NULL,
    unit_price numeric(10, 2) NOT NULL DEFAULT 0.00,
    order_line_item_status order_line_item_status NOT NULL DEFAULT 'PROCESSING'::order_line_item_status
);

CREATE TABLE IF NOT EXISTS public.order_line_simple_items
(
    order_id integer NOT NULL,
    product_id integer NOT NULL,
    quantity integer NOT NULL,
    unit_price numeric(10, 2) NOT NULL DEFAULT 0.00,
    order_line_item_status order_line_item_status NOT NULL DEFAULT 'PROCESSING'::order_line_item_status
);

CREATE TABLE IF NOT EXISTS public.orders
(
    id integer NOT NULL DEFAULT nextval('orders_id_seq'::regclass),
    customer_id integer NOT NULL,
    shipping_fee numeric(10, 2) NOT NULL DEFAULT 0.00,
    total_price numeric(10, 2) NOT NULL DEFAULT 0.00,
    order_status order_status NOT NULL DEFAULT 'PENDING_PAYMENT'::order_status,
    delivery_address jsonb NOT NULL,
    created_at timestamp without time zone NOT NULL DEFAULT now(),
    CONSTRAINT orders_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.product_association_types
(
    id integer NOT NULL DEFAULT nextval('product_association_types_id_seq'::regclass),
    type_name text COLLATE pg_catalog."default" NOT NULL DEFAULT ''::text,
    created_at timestamp without time zone NOT NULL DEFAULT now(),
    CONSTRAINT product_association_types_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.product_associations
(
    product_association_type_id integer NOT NULL,
    product_id integer NOT NULL,
    CONSTRAINT product_associations_pkey PRIMARY KEY (product_association_type_id, product_id)
);

CREATE TABLE IF NOT EXISTS public.product_configurable_options
(
    id integer NOT NULL DEFAULT nextval('product_configurable_options_id_seq'::regclass),
    product_id integer NOT NULL,
    product_option_code character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT product_configurable_options_pkey PRIMARY KEY (id),
    CONSTRAINT product_configurable_options_product_id_product_option_code_key UNIQUE (product_id, product_option_code)
);

CREATE TABLE IF NOT EXISTS public.product_option_values
(
    id integer NOT NULL DEFAULT nextval('product_option_values_id_seq'::regclass),
    option_code character varying(255) COLLATE pg_catalog."default" NOT NULL,
    option_value text COLLATE pg_catalog."default" NOT NULL,
    updated_at timestamp without time zone NOT NULL DEFAULT now(),
    created_at timestamp without time zone NOT NULL DEFAULT now(),
    CONSTRAINT product_option_values_pkey PRIMARY KEY (id),
    CONSTRAINT product_option_values_option_code_option_value_key UNIQUE (option_code, option_value)
);

CREATE TABLE IF NOT EXISTS public.product_options
(
    code character varying(255) COLLATE pg_catalog."default" NOT NULL,
    option_name text COLLATE pg_catalog."default" NOT NULL,
    "position" integer NOT NULL,
    updated_at timestamp without time zone NOT NULL DEFAULT now(),
    created_at timestamp without time zone NOT NULL DEFAULT now(),
    CONSTRAINT product_options_pkey PRIMARY KEY (code),
    CONSTRAINT product_options_position_key UNIQUE ("position")
);

CREATE TABLE IF NOT EXISTS public.product_reviews
(
    order_id integer NOT NULL,
    product_id integer NOT NULL,
    comment text COLLATE pg_catalog."default" NOT NULL DEFAULT ''::text,
    rating integer NOT NULL DEFAULT 0,
    created_at timestamp without time zone NOT NULL DEFAULT now(),
    CONSTRAINT product_reviews_pkey PRIMARY KEY (order_id, product_id)
);

CREATE TABLE IF NOT EXISTS public.product_taxons
(
    id integer NOT NULL DEFAULT nextval('product_taxons_id_seq'::regclass),
    product_id integer NOT NULL,
    taxon_id integer NOT NULL,
    updated_at timestamp without time zone NOT NULL DEFAULT now(),
    created_at timestamp without time zone NOT NULL DEFAULT now(),
    CONSTRAINT product_taxons_pkey PRIMARY KEY (id),
    CONSTRAINT product_taxons_product_id_taxon_id_key UNIQUE (product_id, taxon_id)
);

CREATE TABLE IF NOT EXISTS public.product_variant_options
(
    id integer NOT NULL DEFAULT nextval('product_variant_options_id_seq'::regclass),
    product_variant_id integer NOT NULL,
    product_option_value_id integer NOT NULL,
    updated_at timestamp without time zone NOT NULL DEFAULT now(),
    created_at timestamp without time zone NOT NULL DEFAULT now(),
    CONSTRAINT product_variant_options_pkey PRIMARY KEY (id),
    CONSTRAINT product_variant_options_product_variant_id_product_option_v_key UNIQUE (product_variant_id, product_option_value_id)
);

CREATE TABLE IF NOT EXISTS public.product_variants
(
    id integer NOT NULL DEFAULT nextval('product_variants_id_seq'::regclass),
    pricing numeric(10, 2) NOT NULL DEFAULT 0.00,
    variant_name text COLLATE pg_catalog."default" NOT NULL,
    product_id integer NOT NULL,
    "position" integer NOT NULL,
    product_status product_status NOT NULL DEFAULT 'ACTIVE'::product_status,
    product_variant_image_url text COLLATE pg_catalog."default",
    updated_at timestamp without time zone NOT NULL DEFAULT now(),
    created_at timestamp without time zone NOT NULL DEFAULT now(),
    CONSTRAINT product_variants_pkey PRIMARY KEY (id),
    CONSTRAINT product_variants_product_id_position_key UNIQUE (product_id, "position"),
    CONSTRAINT product_variants_product_id_variant_name_key UNIQUE (product_id, variant_name)
);

CREATE TABLE IF NOT EXISTS public.products
(
    id integer NOT NULL DEFAULT nextval('products_id_seq'::regclass),
    pricing numeric(10, 2) NOT NULL DEFAULT 0.00,
    product_name text COLLATE pg_catalog."default" NOT NULL,
    product_description text COLLATE pg_catalog."default" NOT NULL DEFAULT ''::text,
    product_type product_type NOT NULL DEFAULT 'SIMPLE'::product_type,
    taxon_id integer NOT NULL,
    product_status product_status NOT NULL DEFAULT 'ACTIVE'::product_status,
    product_image_url text COLLATE pg_catalog."default",
    updated_at timestamp without time zone NOT NULL DEFAULT now(),
    created_at timestamp without time zone NOT NULL DEFAULT now(),
    CONSTRAINT products_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.taxons
(
    id integer NOT NULL DEFAULT nextval('taxons_id_seq'::regclass),
    parent_id integer,
    taxon_name text COLLATE pg_catalog."default" NOT NULL,
    slug text COLLATE pg_catalog."default" NOT NULL,
    updated_at timestamp without time zone NOT NULL DEFAULT now(),
    created_at timestamp without time zone NOT NULL DEFAULT now(),
    CONSTRAINT taxons_pkey PRIMARY KEY (id),
    CONSTRAINT taxons_parent_id_slug_key UNIQUE (parent_id, slug),
    CONSTRAINT taxons_parent_id_taxon_name_key UNIQUE (parent_id, taxon_name)
);

ALTER TABLE IF EXISTS public.customer_cart_configurable_items
    ADD CONSTRAINT customer_cart_configurable_items_customer_id_fkey FOREIGN KEY (customer_id)
    REFERENCES public.customers (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.customer_cart_configurable_items
    ADD CONSTRAINT customer_cart_configurable_items_product_variant_id_fkey FOREIGN KEY (product_variant_id)
    REFERENCES public.product_variants (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.customer_cart_simple_items
    ADD CONSTRAINT customer_cart_simple_items_customer_id_fkey FOREIGN KEY (customer_id)
    REFERENCES public.customers (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.customer_cart_simple_items
    ADD CONSTRAINT customer_cart_simple_items_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.products (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.order_line_configurable_items
    ADD CONSTRAINT order_line_configurable_items_order_id_fkey FOREIGN KEY (order_id)
    REFERENCES public.orders (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.order_line_configurable_items
    ADD CONSTRAINT order_line_configurable_items_product_variant_id_fkey FOREIGN KEY (product_variant_id)
    REFERENCES public.product_variants (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.order_line_simple_items
    ADD CONSTRAINT order_line_simple_items_order_id_fkey FOREIGN KEY (order_id)
    REFERENCES public.orders (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.order_line_simple_items
    ADD CONSTRAINT order_line_simple_items_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.products (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT orders_customer_id_fkey FOREIGN KEY (customer_id)
    REFERENCES public.customers (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.product_associations
    ADD CONSTRAINT product_associations_product_association_type_id_fkey FOREIGN KEY (product_association_type_id)
    REFERENCES public.product_association_types (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.product_associations
    ADD CONSTRAINT product_associations_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.products (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.product_configurable_options
    ADD CONSTRAINT product_configurable_options_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.products (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.product_configurable_options
    ADD CONSTRAINT product_configurable_options_product_option_code_fkey FOREIGN KEY (product_option_code)
    REFERENCES public.product_options (code) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.product_option_values
    ADD CONSTRAINT product_option_values_option_code_fkey FOREIGN KEY (option_code)
    REFERENCES public.product_options (code) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.product_reviews
    ADD CONSTRAINT product_reviews_order_id_fkey FOREIGN KEY (order_id)
    REFERENCES public.orders (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.product_reviews
    ADD CONSTRAINT product_reviews_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.products (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.product_taxons
    ADD CONSTRAINT product_taxons_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.products (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.product_taxons
    ADD CONSTRAINT product_taxons_taxon_id_fkey FOREIGN KEY (taxon_id)
    REFERENCES public.taxons (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.product_variant_options
    ADD CONSTRAINT product_variant_options_product_option_value_id_fkey FOREIGN KEY (product_option_value_id)
    REFERENCES public.product_option_values (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.product_variant_options
    ADD CONSTRAINT product_variant_options_product_variant_id_fkey FOREIGN KEY (product_variant_id)
    REFERENCES public.product_variants (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.product_variants
    ADD CONSTRAINT product_variants_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.products (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.products
    ADD CONSTRAINT products_taxon_id_fkey FOREIGN KEY (taxon_id)
    REFERENCES public.taxons (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.taxons
    ADD CONSTRAINT taxons_parent_id_fkey FOREIGN KEY (parent_id)
    REFERENCES public.taxons (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;